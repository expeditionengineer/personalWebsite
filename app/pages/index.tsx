import {useState, createContext} from 'react';
// import Head from "next/head";
// import Image from "next/image";
import { Inter } from "next/font/google";
// import styles from "@/styles/Home.module.css";

import { clientPromise } from "../lib/mongodb.ts";
import Header from "./header.js";
import NavBar from "./navBar.js";
import Content from "./content.js";
import Footer from "./footer.js";

const inter = Inter({ subsets: ["latin"] });

export const NavBarContext = createContext("");

import type { InferGetServerSidePropsType, GetServerSideProps } from "next";

type ConnectionStatus = {
  isConnected: boolean;
};
export const getServerSideProps: GetServerSideProps<
  ConnectionStatus
> = async () => {
  try {
    await clientPromise;
    // `await clientPromise` will use the default database passed in the MONGODB_URI
    // However you can use another database (e.g. myDatabase) by replacing the `await clientPromise` with the following code:
    //
    // `const client = await clientPromise`
    // `const db = client.db("myDatabase")`
    //
    // Then you can execute queries against your database like so:
    // db.find({}) or any of the MongoDB Node Driver commands

    return {
      props: { isConnected: true },
    };
  } catch (e) {
    console.error(e);
    return {
      props: { isConnected: false },
    };
  }
};

export default function Home({
  isConnected,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  const [content, setContent] = useState("Home");
  return (
    <>
      {/* <Head> */}
      {/* <head>
        <title>Expedition Engineer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      {/* </Head> */}
      {/* </head> */}
      <main>
        <div class="row m-2">
          <div class="col-md-10 border border-warning"><Header /></div>
        </div>
        <div class="row m-2">
          <NavBarContext.Provider value={{content, setContent}}>
            <div class="col-md-2 border border-warning ml-3">
              <NavBar />
            </div>
            <div class="col-md-8 border border-warning">            
              <Content />
            </div>  
          </NavBarContext.Provider>
        </div>
        <div class="row m-2">
          <div class="col-md-10 border border-warning">
            <Footer />
          </div>
        </div>
        <div>Connection Status to the MongoDB-Database: {isConnected ? (
          <h2 className="subtitle">You are connected to MongoDB</h2>
        ) : (
          <h2 className="subtitle">
            You are NOT connected to MongoDB. Check the <code>README.md</code>{" "}
            for instructions.
          </h2>
        )}</div>
      </main>
    </>
  );
}
